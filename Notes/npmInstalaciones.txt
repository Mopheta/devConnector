npm i express express-validator bcryptjs config gravatar jsonwebtoken mongoose request

npm i -D nodemon concurrently

para correr el proyecto:
    npm run server
    Si se muere fijarse el ip en mongoDB


users:
	"email": "gDock@gmail.com",
	"password": "1234567"
    	"email": "d@gmail.com",
	"password": "1234567"






1- Crear el modelo
const mongoose = require('mongoose')

const Profile = new mongoose.Schema({
    name: {
        type: String,
        required: true
        default: false
    },
})

module.exports = Profile = mongoose.model('profile', ProfileSchema);

2- Create routes api

3- Definis la firma de la peticion

//NAME: GET PROFILE BY USER ID
//@route  GET api/profile/user/:user_id
//@desc   Get profile by user ID
//@access Public

4- Escribis route.Accion
ejemplo:
route.get('/', async (req,res) => {
   try {
        const profiles = await Profile.find().populate('user'. ['name', 'avatar']);
        return res.json(profiles)
   } catch (err) {
       console.error(err.message);
       res.status(500).send('Server Error');
   }

})

5- Si es un post
validar con check segundo parametro [atuh, [
    check('title', "Title is required)
]]

const errors = validationResult(req)
if(!errors.isEmpty()) {
    return res.status(400).json({ errors: errors.array() })
}


INSTALACIONES EN EL cliente

npm install axios react-router-dom redux react-redux redux-thunk redux-devtools-extension moment react-moment


//EN PACKAGE.json del proyecto
1- creamos un nuevo script para correr el cliente sin tener que navegar a dicha carpeta
2- dev script - unico para correr el front end y el sever de manera conjunta
    utilizando  npm run dev

//En package.json del cliente
1- create proxy, para evitar tener que poner http://.... 
    en cada llamada axios axios.get("http....") y solo utilziar
    axios.get('/api/comments')




Ejemplo de hacer una llamada al backend en Registrar usuario
      //   const newUser = {
      //     name,
      //     email,
      //     password,
      //     password2,
      //   };
      //   try {
      //     const config = {
      //       headers: {
      //         'Content-Type': 'application/json',
      //       },
      //     };
      //     const body = JSON.stringify(newUser);
      //     const res = await axios.post('/api/users', body, config);
      //     console.log(res.data);
      //   } catch (err) {
      //     console.log(err.message);
      //   }